node {
        stage ('Generate Build Version') {
                println 'Generating Provar Version, Format: {Major.Minor.Build.Revision}'
                // RESET_BUILDS_ALL_TIME WILL BE USED ONLY WHEN WE NEED TO RESET THE BUILD_ALL_TIME COUNTER.
                // We will override the BUILDS_ALL_TIME variable by the value of environment-variable RESET_BUILDS_ALL_TIME;
                // If RESET_BUILDS_ALL_TIME is not set it will not be overridden.
                // As soon as first build is triggred, we need to remove RESET_BUILDS_ALL_TIME, else it will keep on overridding BUILDS_ALL_TIME
                env.BUILD_NUMBER = "1.9.99.06"
                println 'Provar Build Version Created: ' + env.BUILD_NUMBER
        }
        
        stage('Copy Installers to dropbox') {
		def installer32 = new File("C:/Provar-Installers/${BUILD_NUMBER}/Provar_setup_v1.9.99.06_win_32.exe")
		def installer64 = new File("C:/Provar-Installers${BUILD_NUMBER}/Provar_setup_v1.9.99.06_win_64.exe")
            
		def dropbox = new File ("C:/Dropbox")
		def buildDirectory = new File(dropbox, "${BUILD_NUMBER}")
                buidDirectory.mkdirs()
                new File(buidDirectory, "Provar_setup_v1.9.99.06_win_32.exe") << installer32.bytes
		new File(buidDirectory, "Provar_setup_v1.9.99.06_win_64.exe") << installer64.bytes
		
	}
	
	stage('Send Email'){
		def emailBody = "Hi, \n Provar Nightly Build Created \n Buid Number: v${BUILD_NUMBER}"
		emailext body: ''' ${emailBody} ''',
                to: "himanshu.sharma@provartesting.com"
    	}
}
